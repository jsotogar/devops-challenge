name: Deploy to ECS Fargate

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: retopichincha
  ECS_CLUSTER: retopichincha-dev-cluster
  ECS_SERVICE: retopichincha-dev-python-microservice

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: docker run $IMAGE_NAME pytest
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Tag Docker image
        run: docker tag $IMAGE_NAME ${{ env.ACR_REGISTRY }}/$IMAGE_NAME:${GITHUB_SHA::8}
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ env.ACR_REGISTRY }}/$IMAGE_NAME:${GITHUB_SHA::8}
          docker push ${{ env.ACR_REGISTRY }}/$IMAGE_NAME:latest
      - name: Deploy to ECS Fargate
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
